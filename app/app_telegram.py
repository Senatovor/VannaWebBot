from vanna_setup import vn
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from config import settings

bot = Bot(token=settings.TELEGRAM_BOT_TOKEN)
dp = Dispatcher()


@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ì–ò–ê. –ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å. –í–æ—Ç –ø—Ä–∏–º–µ—Ä—ã:\n"
                         "¬´–¢—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∏–º–µ—Ä)¬ª")


@dp.message()
async def handle_question(message: types.Message):
    question = message.text
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SQL —Å –ø–æ–º–æ—â—å—é Vanna
        sql = vn.generate_sql(question=question)

        # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        results = vn.run_sql(sql=sql)

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        response = (
            f"üîç <b>–í–∞—à –∑–∞–ø—Ä–æ—Å:</b> <i>{question}</i>\n\n"
            f"üìù <b>SQL:</b>\n<code>{sql}</code>\n\n"
            f"üìä <b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b>\n{results}"
        )

        await message.answer(response, parse_mode="HTML")

    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞:\n {str(e)}")


if __name__ == "__main__":
    dp.run_polling(bot)
